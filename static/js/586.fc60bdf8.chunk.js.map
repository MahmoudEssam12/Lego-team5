{"version":3,"file":"static/js/586.fc60bdf8.chunk.js","mappings":"6PAUe,SAASA,IAStB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAcC,GAAd,WACMC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,QACpCG,EAAeC,OAAOC,OAAOL,EAAKM,UACxCC,QAAQC,IAAIL,GACZ,IAAMG,EAAWH,EAAaM,KAAI,SAACC,GACjC,MAAO,CACLA,QAASC,OAAOD,EAAQE,KACxBC,SAAUH,EAAQG,SAClBC,WAAYJ,EAAQK,UAIlBC,GADWC,EAAAA,EAAAA,MACWC,OAAOC,MAAM,KAAK,GACxCC,EAAcpB,EAAKqB,WAkBzB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAInB,EAAaoB,OAAQ,CACvB,IAAMC,GAAOC,EAAAA,EAAAA,GAAWC,aAAaC,QAAQ,UAAUH,KAAKZ,IAC5DgB,IAAAA,KACQC,yCAA0C,CAC9CL,KAAAA,EACAlB,SAAAA,EACAc,YAAAA,EACAJ,WAAAA,IAEDc,MAAK,SAACC,GAAD,OAASnC,GAASoC,EAAAA,EAAAA,UACvBC,OAAM,SAACC,YAEVnC,GAAS,KAEV,CAACI,EAAaoB,UAGf,iCACE,iBAAKY,UAAU,UAAf,WACE,gFACA,qHAKF,gBAAKA,UAAU,iBAAf,UACE,SAAC,KAAD,CAASC,GAAG,YAAZ,UACE,mBAAQD,UAAU,cAAlB","sources":["components/Success/Success.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport \"./Success.css\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetCart } from \"../../Redux/Actions/cartActions\";\r\n// clear cart\r\n\r\nexport default function Success() {\r\n  //on mount get orders from cart\r\n  // post orders to order collection with user data from token\r\n  // admin will recive the order\r\n  //admin will assign shipper for the order\r\n  // order state is pending\r\n  // shipper will get updated by the order\r\n  //shipper will update (withShipper, isShipped, isDeliverd, isCanceled)\r\n  // user will have get tracker ui\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState(false);\r\n  const cart = useSelector((store) => store.cart);\r\n  const cartProducts = Object.values(cart.products);\r\n  console.log(cartProducts);\r\n  const products = cartProducts.map((product) => {\r\n    return {\r\n      product: Number(product._id),\r\n      quantity: product.quantity,\r\n      unit_price: product.price,\r\n    };\r\n  });\r\n  const location = useLocation();\r\n  const session_id = location.search.split(\"=\")[1];\r\n  const total_price = cart.totalPrice;\r\n  useEffect(() => {\r\n    if (cartProducts.length) {\r\n      const user = jwt_decode(localStorage.getItem(\"token\")).user._id;\r\n      axios\r\n        .post(process.env.REACT_APP_API_URL + \"/order\", {\r\n          user,\r\n          products,\r\n          total_price,\r\n          session_id,\r\n        })\r\n        .then((res) => dispatch(resetCart()))\r\n        .catch((err) => {});\r\n    } else {\r\n      setState(true);\r\n    }\r\n  }, [cartProducts.length]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"success\">\r\n        <h1>ðŸŽ‰ Thank you for your order ðŸŽ‰</h1>\r\n        <p>\r\n          We are currently processing your order and will send you a\r\n          confirmation email shortly\r\n        </p>\r\n      </div>\r\n      <div className=\"success-button\">\r\n        <NavLink to=\"/shop-now\">\r\n          <button className=\"home-button\">Continue Shopping</button>\r\n        </NavLink>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Success","dispatch","useDispatch","useState","setState","cart","useSelector","store","cartProducts","Object","values","products","console","log","map","product","Number","_id","quantity","unit_price","price","session_id","useLocation","search","split","total_price","totalPrice","useEffect","length","user","jwt_decode","localStorage","getItem","axios","process","then","res","resetCart","catch","err","className","to"],"sourceRoot":""}